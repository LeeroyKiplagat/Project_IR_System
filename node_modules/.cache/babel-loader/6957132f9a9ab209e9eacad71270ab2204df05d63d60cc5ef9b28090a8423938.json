{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { isNil } from '../../services/predicate';\nexport var is = function is(expectedValue) {\n  var validator = function validator(props, propName, componentName) {\n    var compName = componentName || 'ANONYMOUS';\n    var value = props[propName];\n    if (value !== expectedValue) {\n      return new Error(\"[\".concat(propName.toString(), \"] property in [\").concat(compName, \"] component is expected to equal [\").concat(expectedValue, \"] but\\n         [\").concat(value, \"] was provided instead.\"));\n    }\n    return null;\n  };\n  validator.isRequired = function (props, propName, componentName) {\n    var compName = componentName || 'ANONYMOUS';\n    var value = props[propName];\n    if (isNil(value)) {\n      return new Error(\"[\".concat(propName.toString(), \"] property in [\").concat(compName, \"] component is required but seems to be missing\"));\n    }\n    return validator(props, propName, componentName);\n  };\n  return validator;\n};","map":{"version":3,"names":["isNil","is","expectedValue","validator","props","propName","componentName","compName","value","Error","concat","toString","isRequired"],"sources":["D:/Masters/Advance Database Systems/Labs/Project_IR_System/node_modules/@elastic/eui/es/utils/prop_types/is.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { isNil } from '../../services/predicate';\nexport var is = function is(expectedValue) {\n  var validator = function validator(props, propName, componentName) {\n    var compName = componentName || 'ANONYMOUS';\n    var value = props[propName];\n    if (value !== expectedValue) {\n      return new Error(\"[\".concat(propName.toString(), \"] property in [\").concat(compName, \"] component is expected to equal [\").concat(expectedValue, \"] but\\n         [\").concat(value, \"] was provided instead.\"));\n    }\n    return null;\n  };\n  validator.isRequired = function (props, propName, componentName) {\n    var compName = componentName || 'ANONYMOUS';\n    var value = props[propName];\n    if (isNil(value)) {\n      return new Error(\"[\".concat(propName.toString(), \"] property in [\").concat(compName, \"] component is required but seems to be missing\"));\n    }\n    return validator(props, propName, componentName);\n  };\n  return validator;\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,KAAK,QAAQ,0BAA0B;AAChD,OAAO,IAAIC,EAAE,GAAG,SAASA,EAAEA,CAACC,aAAa,EAAE;EACzC,IAAIC,SAAS,GAAG,SAASA,SAASA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAE;IACjE,IAAIC,QAAQ,GAAGD,aAAa,IAAI,WAAW;IAC3C,IAAIE,KAAK,GAAGJ,KAAK,CAACC,QAAQ,CAAC;IAC3B,IAAIG,KAAK,KAAKN,aAAa,EAAE;MAC3B,OAAO,IAAIO,KAAK,CAAC,GAAG,CAACC,MAAM,CAACL,QAAQ,CAACM,QAAQ,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAACD,MAAM,CAACH,QAAQ,EAAE,oCAAoC,CAAC,CAACG,MAAM,CAACR,aAAa,EAAE,mBAAmB,CAAC,CAACQ,MAAM,CAACF,KAAK,EAAE,yBAAyB,CAAC,CAAC;IACjN;IACA,OAAO,IAAI;EACb,CAAC;EACDL,SAAS,CAACS,UAAU,GAAG,UAAUR,KAAK,EAAEC,QAAQ,EAAEC,aAAa,EAAE;IAC/D,IAAIC,QAAQ,GAAGD,aAAa,IAAI,WAAW;IAC3C,IAAIE,KAAK,GAAGJ,KAAK,CAACC,QAAQ,CAAC;IAC3B,IAAIL,KAAK,CAACQ,KAAK,CAAC,EAAE;MAChB,OAAO,IAAIC,KAAK,CAAC,GAAG,CAACC,MAAM,CAACL,QAAQ,CAACM,QAAQ,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAACD,MAAM,CAACH,QAAQ,EAAE,iDAAiD,CAAC,CAAC;IAC1I;IACA,OAAOJ,SAAS,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC;EAClD,CAAC;EACD,OAAOH,SAAS;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}